{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/utils.ts","webpack:///./src/lib/store.ts","webpack:///./src/lib/history.ts","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/directives/repeat.js","webpack:///./node_modules/lit-html/directives/guard.js","webpack:///./node_modules/lit-html/directives/if-defined.js","webpack:///./src/lib/element.ts","webpack:///./src/lib/decorators.ts","webpack:///./src/index.ts","webpack:///./src/examples/multi-page/store.ts","webpack:///./src/elements/route.ts","webpack:///./src/elements/link.ts","webpack:///./src/elements/title.ts","webpack:///./src/examples/multi-page/page-b.ts","webpack:///./src/examples/multi-page/page-c.ts","webpack:///./src/examples/multi-page/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","updaterSet","Set","addMicrotask","func","size","globalThis","queueMicrotask","forEach","clear","delete","add","EventTarget","Image","Pool","super","currentId","count","pool","Map","setPrototypeOf","this","item","dispatchEvent","CustomEvent","set","QueryString","URLSearchParams","param","query","fromEntries","entries","keys","append","string","toString","raw","arr","args","reduce","prev","current","index","css","WeakMap","cleanObject","GemError","msg","emptyFunction","HANDLES_KEY","createStore","originStore","store","writable","createStoreSet","originStoreSet","updateStore","assign","history","location","pushState","replaceState","getKey","$hasCloseHandle","$hasOpenHandle","$hasShouldCloseHandle","$key","paramsMap","validData","getAbsolutePath","relativePath","basePath","getRelativePath","realPath","replace","RegExp","initParams","params","title","path","pathname","search","changePath","hash","updateHistory","state","close","open","shouldClose","url","prevHave","updateHistoryByNative","originUrl","URL","origin","basePathStore","defineProperties","v","getParams","updateParams","pushIgnoreCloseHandle","back","navigating","addEventListener","newState","has","prevState","prevParams","closeHandle","shouldCloseHandle","forward","directives","f","isDirective","isCEPolyfill","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","nodeMarker","markerRegex","boundAttributeSuffix","Template","result","element","parts","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","tagName","currentNode","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","innerHTML","getHTML","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","text","_getValue","committer","directive","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","join","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","list","map","partListCache","keyListCache","repeat","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","previousValues","guard","previousValue","every","from","ifDefined","litHtml","svg","render","appendInto","__litHtml","HTMLElement","shadow","setState","willMount","mounted","shouldUpdate","__update","updated","attributeChanged","propertyChanged","unmounted","__renderRoot","attachShadow","observedAttributes","observedPropertys","defineEvents","observedStores","adoptedStyleSheets","attr","prop","_substr","$1","toUpperCase","kebabToCamelCase","configurable","__connectProperty","connect","shadowRoot","concat","__internals","attachInternals","isEventHandle","propValue","detail","evt","__isMounted","payload","_name","_oldValue","_newValue","oldValue","newValue","callback","__unmountCallback","constructor","disconnect","GemElement","__connectedCallback","renderTaskPool","loop","tick","requestAnimationFrame","timestamp","task","performance","now","define","attribute","con","internals","states","contains","that","classList","remove","emitter","connectStore","cls","customElement","Class","pageA","pageB","ParamsRegExp","pattern","namePosition","_m","getReg","isMatch","createPath","route","href","_href","currentRoute","reg","matchResult","initPage","change","routes","defaultRoute","redirect","clickHandle","getHref","startsWith","stopPropagation","createHistoryParams","docTitle","preventDefault","onclick","queryProp","hashProp","isMatchPattern","active","isHidden","hidden","newTitle","textContent","querySelector","style","body"],"mappings":"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","file":"bundle.4a00d221816d653e1905.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".bundle.\" + {\"1\":\"5e97e2cb5c9026a0de2b\",\"2\":\"721c1f7d531614c77bf8\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gem/build/multi-page/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const updaterSet = new Set<Function>();\nexport function addMicrotask(func: Function) {\n  if (!updaterSet.size) {\n    // delayed execution callback after updating store\n    globalThis.queueMicrotask(() => {\n      updaterSet.forEach(func => func());\n      updaterSet.clear();\n    });\n  }\n  updaterSet.delete(func);\n  updaterSet.add(func);\n}\n\ninterface PoolEventMap {\n  start: Event;\n  end: Event;\n}\n\n/**\n * `EventTarget` safari not support\n * https://bugs.webkit.org/show_bug.cgi?id=174313\n */\nconst EventTarget = globalThis.Image || Object; // support nodejs\nexport class Pool<T> extends EventTarget {\n  addEventListener: <K extends keyof PoolEventMap>(\n    type: K,\n    listener: (this: Pool<T>, ev: PoolEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ) => void;\n  constructor() {\n    super();\n    // https://bugs.webkit.org/show_bug.cgi?id=198674\n    Object.setPrototypeOf(this, Pool.prototype);\n  }\n  currentId = 0;\n  count = 0;\n  pool = new Map<number, T>();\n\n  add(item: T) {\n    if (!this.pool.size) this.dispatchEvent(new CustomEvent('start'));\n    this.pool.set(this.count, item);\n    this.count += 1;\n  }\n\n  get(): T | undefined {\n    const item = this.pool.get(this.currentId);\n    if (item) {\n      this.pool.delete(this.currentId);\n      this.currentId += 1;\n      if (!this.pool.size) this.dispatchEvent(new CustomEvent('end'));\n    }\n    return item;\n  }\n}\n\ndeclare global {\n  interface URLSearchParams {\n    entries(): Iterable<readonly [string | number | symbol, any]>;\n  }\n}\nexport class QueryString extends URLSearchParams {\n  constructor(param: any) {\n    if (param instanceof QueryString) {\n      return param;\n    }\n    super(param);\n    /**\n     * can't extend `URLSearchParams`\n     * https://bugs.webkit.org/show_bug.cgi?id=198674\n     */\n    Object.setPrototypeOf(this, QueryString.prototype);\n  }\n\n  concat(param: any) {\n    let query: any;\n    if (typeof param === 'string') {\n      query = Object.fromEntries(new URLSearchParams(param).entries());\n    } else {\n      query = param;\n    }\n    Object.keys(query).forEach(key => {\n      this.append(key, query[key]);\n    });\n  }\n\n  toString() {\n    const string = super.toString();\n    return string ? `?${string}` : '';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n// 写 html 文本\nexport function raw(arr: TemplateStringsArray, ...args: any[]) {\n  return arr.reduce((prev, current, index) => prev + (args[index - 1] || '') + current);\n}\n\n// 写 css 文本，在 CSSStyleSheet 中使用\nexport function css(arr: TemplateStringsArray, ...args: any[]) {\n  return raw(arr, ...args);\n}\n\nexport type Sheet<T> = {\n  [P in keyof T]: P;\n};\n\ndeclare global {\n  interface CSSStyleSheet {\n    replaceSync: (str: string) => void;\n    // 作为 CSSStyleSheet 用的同时能作为原始对象读取属性\n    [selector: string]: any;\n  }\n\n  interface CSSRuleList {\n    item(index: number): CSSStyleRule;\n  }\n  interface ShadowRoot {\n    adoptedStyleSheets: Sheet<unknown>[];\n  }\n  interface Document {\n    adoptedStyleSheets: Sheet<unknown>[];\n  }\n}\n\ntype StyledType = 'id' | 'class' | 'tag';\ninterface StyledValue {\n  str: string;\n  key: string;\n  type: StyledType;\n}\ninterface StyledValues {\n  [index: string]: StyledValue;\n}\n\nconst rulesWeakMap = new WeakMap<Sheet<unknown>, any>();\n/**\n * !!! 目前只有 Chrome 支持\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1520690\n *\n * 创建 style sheet 用于 `adoptedStyleSheets`\n * @param rules string 不能动态更新的 css\n * @param mediaQuery string 媒体查询\n */\nexport function createCSSSheet<T extends StyledValues>(\n  rules: T | string,\n  mediaQuery = '',\n): T extends string ? CSSStyleSheet : Sheet<T> {\n  let cssSheet = rulesWeakMap.get(rules);\n  if (!cssSheet) {\n    const sheet = new CSSStyleSheet();\n    sheet.media.mediaText = mediaQuery;\n    let style = '';\n    if (typeof rules === 'string') {\n      style = rules;\n    } else {\n      Object.keys(rules).forEach(key => {\n        sheet[key] = rules[key].type === 'tag' ? key : `${key}-${rules[key].key}`;\n        style += rules[key].str.replace(/&/g, sheet[key]);\n      });\n      rulesWeakMap.set(rules, sheet);\n    }\n    sheet.replaceSync(style);\n    cssSheet = sheet;\n  }\n  return cssSheet;\n}\n\nfunction randomStr(number = 5, origin = '0123456789abcdefghijklmnopqrstuvwxyz') {\n  const len = origin.length;\n  let str = '';\n  for (let i = 0; i < number; i++) {\n    str += origin[Math.floor(Math.random() * len)];\n  }\n  return str;\n}\n\n// 只支持一层嵌套\n// https://drafts.csswg.org/css-nesting-1/\nfunction flatStyled(style: string, type: StyledType): StyledValue {\n  const subStyle: string[] = [];\n  let str =\n    `& {${style.replace(new RegExp('&.*{(.*)}', 'gs'), function(substr) {\n      subStyle.push(substr);\n      return '';\n    })}}` + subStyle.join('');\n  if (type !== 'tag') str = str.replace(/&/g, type === 'class' ? '.&' : '#&');\n  return { str, key: randomStr(), type };\n}\n\n// 写 css 文本，在 CSSStyleSheet 中使用，使用 styed-components 高亮\n//\n// createCSSSheet({\n//   red: styled.class`\n//     background: red;\n//     &:hover {\n//       background: blue;\n//     }\n//   `,\n// });\n\nexport const styled = {\n  class: (arr: TemplateStringsArray, ...args: any[]) => {\n    const style = raw(arr, ...args);\n    return flatStyled(style, 'class');\n  },\n  id: (arr: TemplateStringsArray, ...args: any[]) => {\n    const style = raw(arr, ...args);\n    return flatStyled(style, 'id');\n  },\n  tag: (arr: TemplateStringsArray, ...args: any[]) => {\n    const style = raw(arr, ...args);\n    return flatStyled(style, 'tag');\n  },\n};\n\nexport function camelToKebabCase(str: string) {\n  return str.replace(/[A-Z]/g, ($1: string) => '-' + $1.toLowerCase());\n}\n\nexport function kebabToCamelCase(str: string) {\n  return str.replace(/-(.)/g, (_substr, $1: string) => $1.toUpperCase());\n}\n\nexport function cleanObject<T extends object>(o: T) {\n  Object.keys(o).forEach((key: string) => {\n    const k = key as keyof T;\n    delete o[k];\n  });\n  return o;\n}\n\nexport class GemError extends Error {\n  constructor(msg: string) {\n    super(msg);\n    this.message = `gem: ${this.message}`;\n  }\n}\n\nexport function emptyFunction() {\n  // 用于占位的空函数\n}\n","import { addMicrotask } from './utils';\n\n// 不使用符号，方便跨 Realms\nexport const HANDLES_KEY = 'gem@storeHandlesKey';\n\nexport interface StoreTrait {\n  [HANDLES_KEY]: Set<Function>;\n}\n\nexport type Store<T> = T & StoreTrait;\n\nexport type StoreSet<T> = {\n  [P in keyof T]: T[P] & Store<T[P]>;\n};\n\nexport function createStore<T extends object>(originStore: T): Store<T> {\n  const store = originStore as Store<T>;\n  // 序列化时忽略\n  Object.defineProperty(store, HANDLES_KEY, { enumerable: false, value: new Set<Function>(), writable: true });\n  return store;\n}\n\ninterface StoreObjectSet {\n  [store: string]: object;\n}\nexport function createStoreSet<T extends StoreObjectSet>(originStoreSet: T) {\n  const keys = Object.keys(originStoreSet);\n  keys.forEach(key => {\n    const store = originStoreSet[key] as any;\n    createStore(store as object);\n  });\n\n  return originStoreSet as StoreSet<T>;\n}\n\nexport function updateStore<T extends Store<unknown>>(store: T, value: Partial<Omit<T, keyof StoreTrait>> | undefined) {\n  Object.assign(store, value);\n  const listeners = store[HANDLES_KEY];\n  listeners.forEach(func => {\n    addMicrotask(func);\n  });\n}\n\nexport function connect<T extends Store<unknown>>(store: T, func: Function) {\n  const listeners = store[HANDLES_KEY];\n  listeners.add(func);\n}\n\nexport function disconnect<T extends Store<unknown>>(store: T, func: Function) {\n  const listeners = store[HANDLES_KEY];\n  listeners.delete(func);\n}\n","import { createStore, updateStore, Store } from './store';\nimport { QueryString, cleanObject, GemError } from './utils';\n\nexport const history = window.history;\nconst location = window.location;\nconst pushState: typeof history.pushState = history.pushState.bind(history);\nconst replaceState: typeof history.replaceState = history.replaceState.bind(history);\n\nlet key = 0;\nconst getKey = () => ++key;\n\n// history.state\nexport interface HistoryItem {\n  $hasCloseHandle: boolean;\n  $hasOpenHandle: boolean;\n  $hasShouldCloseHandle: boolean;\n  $key: number;\n  [index: string]: any;\n}\n\nconst store = createStore<HistoryItem>({\n  $hasCloseHandle: false,\n  $hasOpenHandle: false,\n  $hasShouldCloseHandle: false,\n  $key: 0,\n});\n\nexport interface UpdateHistoryParams {\n  title?: string;\n  path?: string; // 不包括 basePath，只有根目录储存末尾斜杠\n  query?: string | QueryString; // 包含 `?`\n  hash?: string; // 包含 `#`\n  open?: Function; // 按下前进键时执行\n  close?: Function; // 按下返回键时执行\n  shouldClose?: () => boolean; // 按下返回键时判断是否执行 close 函数，返回为 false 时不执行，并恢复 history\n  data?: any;\n}\n\n// 实际应用值\ntype HistoryParams = UpdateHistoryParams & { title: string; path: string; query: QueryString; hash: string };\n\n// TODO: WeakRef\nconst paramsMap = new Map<number, HistoryParams>();\n\ndeclare global {\n  interface History {\n    store: Store<HistoryItem>;\n    basePath?: string;\n    getParams: () => HistoryParams;\n\n    push: (params: UpdateHistoryParams) => void;\n    replace: (params: UpdateHistoryParams) => void;\n    // push 一条历史记录\n    // 有 close 处理函数时先执行 closeHandle 在 replace\n    // 比如在 modal 打开时跳转页面\n    // 不完美：只支持在 1 级 modal 中切换页面\n    pushIgnoreCloseHandle: (params: UpdateHistoryParams) => void;\n    updateParams: (params: Omit<UpdateHistoryParams, 'path' | 'query' | 'hash' | 'state'>) => void;\n  }\n}\n\ntype UpdateHistoryType = 'push' | 'replace';\n\nfunction validData(data: any) {\n  if (data?.$key) throw new GemError('`$key` is not allowed');\n  if (data?.$hasCloseHandle) throw new GemError('`$hasCloseHandle` is not allowed');\n  if (data?.$hasOpenHandle) throw new GemError('`$hasOpenHandle` is not allowed');\n  if (data?.$hasShouldCloseHandle) throw new GemError('`$hasShouldCloseHandle` is not allowed');\n}\n\n// 并非实际路径 `location.pathname`\nfunction getAbsolutePath(relativePath: string) {\n  if (history.basePath) {\n    return history.basePath + (relativePath === '/' ? '' : relativePath);\n  }\n  return relativePath;\n}\n\nfunction getRelativePath(realPath: string) {\n  return realPath.replace(new RegExp(`^${history.basePath}`), '');\n}\n\nfunction initParams(params: UpdateHistoryParams): HistoryParams {\n  const title = params.title || '';\n  // 没提供 path 使用当前 path\n  const path = params.path || getRelativePath(location.pathname);\n  // 没提供 query 又没有提供 path 时使用当前 search\n  const query = new QueryString(params.query || (params.path ? '' : location.search));\n  const changePath = params.path || params.query;\n  // 没提供 hash 又没有改变路径时使用当前 hash\n  const hash = params.hash || (changePath ? '' : location.hash);\n  return { ...params, title, path, query, hash };\n}\n\nfunction updateHistory(type: UpdateHistoryType, p: UpdateHistoryParams) {\n  validData(p.data);\n  const params = initParams(p);\n  const { title, path, query, hash } = params;\n  const state = {\n    $hasCloseHandle: !!params.close,\n    $hasOpenHandle: !!params.open,\n    $hasShouldCloseHandle: !!params.shouldClose,\n    $key: getKey(),\n    ...(params.data || {}),\n  };\n  paramsMap.set(state.$key, params);\n  updateStore(cleanObject(store), state);\n  const url = getAbsolutePath(path) + new QueryString(query) + hash;\n  const prevHave = location.hash;\n  (type === 'push' ? pushState : replaceState)(state, title, url);\n  if (prevHave !== hash) window.dispatchEvent(new CustomEvent('hashchange'));\n}\n\n// 跨框架时，调用者对 basePath 无感知\nfunction updateHistoryByNative(type: UpdateHistoryType, data: any, title: string, originUrl: string) {\n  validData(data);\n  const state = {\n    $key: getKey(),\n    ...(data || {}),\n  };\n  const { pathname, search, hash } = new URL(originUrl, location.origin);\n  const params = initParams({ path: pathname, query: new QueryString(search), hash, title, data });\n  paramsMap.set(state.$key, params);\n  updateStore(cleanObject(store), state);\n  const url = getAbsolutePath(pathname) + params.query + hash;\n  const prevHave = location.hash;\n  (type === 'push' ? pushState : replaceState)(state, title, url);\n  if (prevHave !== hash) window.dispatchEvent(new CustomEvent('hashchange'));\n}\n\nexport const basePathStore = createStore({\n  basePath: '',\n});\n\nif (!('basePath' in history)) {\n  // 不允许其他框架重写\n  // 保持原有功能\n  Object.defineProperties(history, {\n    basePath: {\n      get() {\n        return basePathStore.basePath;\n      },\n      set(v: string) {\n        if (!basePathStore.basePath) {\n          // 应用初始化的时候设置\n          updateStore(basePathStore, { basePath: v });\n          // paramsMap 更新后 ui 才会更新\n          Object.assign(paramsMap.get(store.$key), { path: getRelativePath(location.pathname) });\n        } else {\n          throw new GemError('已经有其他环境使用 gem , 会共享 history 对象，禁止再修改 history 对象');\n        }\n      },\n    },\n    getParams: {\n      value: function() {\n        return paramsMap.get(store.$key);\n      },\n    },\n    updateParams: {\n      value: function(params: UpdateHistoryParams) {\n        Object.assign(paramsMap.get(store.$key), params);\n        updateStore(store, {});\n      },\n    },\n    store: {\n      value: store,\n    },\n    push: {\n      value: function(params: UpdateHistoryParams) {\n        updateHistory('push', params);\n      },\n    },\n    pushIgnoreCloseHandle: {\n      value: function(params: UpdateHistoryParams) {\n        if (store.$hasCloseHandle) {\n          paramsMap.get(store.$key)?.close?.();\n          history.replace(params);\n        } else {\n          history.push(params);\n        }\n      },\n    },\n    replace: {\n      value: function(params: UpdateHistoryParams) {\n        updateHistory('replace', params);\n      },\n    },\n    pushState: {\n      value: function(data: any, title: string, path: string) {\n        updateHistoryByNative('push', data, title, path);\n      },\n    },\n    replaceState: {\n      value: function(data: any, title: string, path: string) {\n        updateHistoryByNative('replace', data, title, path);\n      },\n    },\n  });\n\n  if (!history.state) {\n    // 初始化 historyItem\n    const { pathname, search, hash } = location;\n    history.replace({ path: pathname, query: search, hash });\n  } else if (history.state.$hasCloseHandle) {\n    updateStore(store, history.state);\n    // 有 handle 返回键的页面刷新需要清除返回 handler\n    history.back();\n  } else {\n    // 有 gem 历史的正常普通刷新, 储存 params\n    const params = initParams({ title: document.title });\n    updateStore(store, {\n      $key: getKey(),\n      ...(history.state || {}),\n    });\n    paramsMap.set(store.$key, params);\n  }\n\n  /**\n   * 表示 popstate handler 中正在进行导航\n   */\n  let navigating = false;\n  window.addEventListener('popstate', event => {\n    const newState = event.state as HistoryItem | null;\n    if (!newState?.$key) {\n      // 比如作为其他 app 的宿主 app\n      return;\n    }\n    if (navigating) {\n      navigating = false;\n      return;\n    }\n\n    // 处理 forward or back\n    // replace 不会触发\n\n    // 刷新后再导航需要从当前 state 中构建 params\n    // 理论上该条历史记录中不会出现事件处理器\n    if (!paramsMap.has(newState.$key)) {\n      const { pathname, search, hash } = location;\n      paramsMap.set(newState.$key, {\n        path: pathname,\n        query: new QueryString(search),\n        hash,\n        title: document.title, // 浏览器缓存的 title\n        data: newState,\n      });\n    }\n\n    // url 变化前 historyItem\n    const prevState = store;\n\n    if (newState.$key > prevState.$key && newState.$hasOpenHandle) {\n      // 返回键关闭的 modal 能前进键重新打开\n      // 刷新后不能工作：刷新后 historyItem 中只有 url\n      paramsMap.get(newState.$key)?.open?.();\n    } else if (prevState.$hasCloseHandle) {\n      const prevParams = paramsMap.get(prevState.$key);\n      const closeHandle = prevParams?.close;\n      const shouldCloseHandle = prevParams?.shouldClose;\n      const notAllowClose = shouldCloseHandle && !shouldCloseHandle();\n      if (notAllowClose) {\n        navigating = true;\n        history.forward(); // 将重新触发 popstate\n        return; // 历史记录栈位置没有变化，不需要后面的 updateStore\n      } else {\n        // handle 返回键\n        if (closeHandle) {\n          closeHandle();\n        } else if (newState.$hasCloseHandle) {\n          // 有 modal 的页面刷新会执行 back 触发 popstate\n          // 如果是二级 modal 页面刷新\n          // 则还需要进行一次 back\n          // !!! 不完美：三级 modal 页面刷新不支持返回到初始页面\n          navigating = true;\n          history.back();\n        }\n      }\n    }\n\n    updateStore(cleanObject(store), newState);\n  });\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","/* eslint-disable @typescript-eslint/no-empty-function */\n\nimport * as lit from 'lit-html';\nimport { TemplateResult } from 'lit-html';\nimport { connect, disconnect, HANDLES_KEY, Store } from './store';\nimport { Pool, addMicrotask, Sheet, kebabToCamelCase, emptyFunction } from './utils';\n\nimport { repeat as litRepeat } from 'lit-html/directives/repeat';\nimport { guard as litGuard } from 'lit-html/directives/guard';\nimport { ifDefined as litIfDefined } from 'lit-html/directives/if-defined';\n\nlet litHtml = {\n  html: lit.html,\n  svg: lit.svg,\n  render: lit.render,\n  directive: lit.directive,\n  repeat: litRepeat,\n  guard: litGuard,\n  ifDefined: litIfDefined,\n};\n\ndeclare global {\n  interface Window {\n    __litHtml: typeof litHtml;\n  }\n}\n\nif (window.__litHtml) {\n  // 自定义元素不能重复定义\n  // 所以嵌套 gem app 中导出的自定义元素类可能是之前定义的类\n  // 可能造成使用的 html 对象不是同一个\n  // map, 缓存之类的会变得不同\n  // 所以需要把他们放在全局对象中\n  litHtml = window.__litHtml;\n} else {\n  window.__litHtml = litHtml;\n}\n\nconst { html, svg, render, directive, repeat, guard, ifDefined } = litHtml;\nexport { html, svg, render, directive, repeat, guard, ifDefined, TemplateResult };\n\ndeclare global {\n  interface ElementInternals {\n    // 不一定支持\n    states?: DOMTokenList;\n  }\n  interface HTMLElement {\n    attachInternals: () => ElementInternals;\n  }\n}\n\ntype UnmountCallback = () => void;\n\n// final 字段如果使用 symbol 或者 private 将导致 modal-base 生成匿名子类 declaration 失败\n/**\n * @attr ref\n */\nexport abstract class BaseElement<T = {}> extends HTMLElement {\n  // 这里只是字段申明，不能赋值，否则子类会继承被共享该字段\n  static observedAttributes: string[]; // WebAPI 中是实时检查这个列表\n  static observedPropertys: string[];\n  static observedStores: Store<unknown>[];\n  static adoptedStyleSheets: (CSSStyleSheet | Sheet<unknown>)[];\n  static defineEvents: string[];\n\n  readonly state: T;\n  readonly ref: string;\n\n  /**@final */\n  __renderRoot: HTMLElement | ShadowRoot;\n  /**@final */\n  __internals: ElementInternals | undefined;\n  /**@final */\n  __isMounted: boolean;\n\n  __unmountCallback: UnmountCallback | undefined;\n\n  constructor(shadow = true) {\n    super();\n    this.setState = this.setState.bind(this);\n    this.willMount = this.willMount.bind(this);\n    this.render = this.render.bind(this);\n    this.mounted = this.mounted.bind(this);\n    this.shouldUpdate = this.shouldUpdate.bind(this);\n    this.__update = this.__update.bind(this);\n    this.updated = this.updated.bind(this);\n    this.attributeChanged = this.attributeChanged.bind(this);\n    this.propertyChanged = this.propertyChanged.bind(this);\n    this.unmounted = this.unmounted.bind(this);\n\n    this.__renderRoot = shadow ? this.attachShadow({ mode: 'open' }) : this;\n    const { observedAttributes, observedPropertys, defineEvents, observedStores, adoptedStyleSheets } = new.target;\n    if (observedAttributes) {\n      observedAttributes.forEach(attr => {\n        const prop = kebabToCamelCase(attr);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (typeof this[prop] === 'function') {\n          throw `Don't use attribute with the same name as native methods`;\n        }\n        // Native attribute，no need difine property\n        // e.g: `id`, `title`, `hidden`, `alt`, `lang`\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (this[prop] !== undefined) return;\n        // !!! Custom property shortcut access only supports `string` type\n        Object.defineProperty(this, prop, {\n          configurable: true,\n          get() {\n            // Return empty string if attribute does not exist\n            return this.getAttribute(attr) || '';\n          },\n          set(v: string) {\n            if (v === null) {\n              this.removeAttribute(attr);\n            } else {\n              this.setAttribute(attr, v);\n            }\n          },\n        });\n      });\n    }\n    if (observedPropertys) {\n      observedPropertys.forEach(prop => {\n        this.__connectProperty(prop, false);\n      });\n    }\n    if (defineEvents) {\n      defineEvents.forEach(event => {\n        this.__connectProperty(event, true);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this[event] = emptyFunction;\n      });\n    }\n    if (observedStores) {\n      observedStores.forEach(store => {\n        if (!store[HANDLES_KEY]) {\n          throw new Error('`observedStores` only support store module');\n        }\n\n        connect(store, this.__update);\n      });\n    }\n    if (adoptedStyleSheets) {\n      if (this.shadowRoot) {\n        this.shadowRoot.adoptedStyleSheets = adoptedStyleSheets;\n      } else {\n        document.adoptedStyleSheets = document.adoptedStyleSheets.concat(adoptedStyleSheets);\n      }\n    }\n  }\n\n  /**@final */\n  get internals() {\n    if (!this.__internals) {\n      this.__internals = this.attachInternals();\n    }\n    return this.__internals;\n  }\n\n  /**\n   * @final\n   * 和 `attr` 不一样，只有等 `lit-html` 在已经初始化的元素上设置 `prop` 后才能访问\n   * 所以能在类字段中直接访问 `attr` 而不能访问 `prop`\n   * @example\n   * class TempGem extends GemElement {\n   *   static observedPropertys = ['prop'];\n   *   test = expect(this.prop).to.equal(undefined);\n   * }\n   * // <temp-gem .prop=${{a: 1}}></temp-gem>\n   * */\n  __connectProperty(prop: string, isEventHandle = false) {\n    if (prop in this) return;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    let propValue: any = this[prop];\n    Object.defineProperty(this, prop, {\n      configurable: true,\n      get() {\n        return propValue;\n      },\n      set(v) {\n        if (v !== propValue) {\n          if (isEventHandle) {\n            if (v.isEventHandle) throw `Don't assign a wrapped event handler`;\n            propValue = (detail: any) => {\n              const evt = new CustomEvent(prop.toLowerCase(), { detail });\n              this.dispatchEvent(evt);\n              v(evt);\n            };\n            propValue.isEventHandle = true;\n          } else {\n            propValue = v;\n          }\n          if (this.__isMounted) {\n            this.propertyChanged(prop, propValue, v);\n            addMicrotask(this.__update);\n          }\n        }\n      },\n    });\n  }\n\n  /**@final */\n  setState(payload: Partial<T>) {\n    if (!this.state) throw new Error('`state` not initialized');\n    Object.assign(this.state, payload);\n    addMicrotask(this.__update);\n  }\n\n  /**@lifecycle */\n  willMount(): any {}\n\n  /**@lifecycle */\n  render(): TemplateResult | null {\n    return html`\n      <slot></slot>\n    `;\n  }\n\n  /**@lifecycle */\n  mounted(): any {}\n\n  /**@lifecycle */\n  shouldUpdate() {\n    return true;\n  }\n\n  /**@final */\n  __update() {\n    if (this.__isMounted && this.shouldUpdate()) {\n      render(this.render(), this.__renderRoot);\n      this.updated();\n    }\n  }\n\n  /**@helper */\n  update() {\n    this.__update();\n  }\n\n  /**@lifecycle */\n  updated(): any {}\n\n  // 同步触发\n  /**@lifecycle */\n  propertyChanged(_name: string, _oldValue: any, _newValue: any): any {}\n  // 同步触发\n  /**@lifecycle */\n  attributeChanged(_name: string, _oldValue: string, _newValue: string): any {}\n\n  /**@lifecycle */\n  unmounted(): any {}\n\n  /**@private */\n  /**@final */\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (this.__isMounted) {\n      this.attributeChanged(name, oldValue, newValue);\n      addMicrotask(this.__update);\n    }\n  }\n\n  /**@final */\n  __connectedCallback() {\n    render(this.render(), this.__renderRoot);\n    const callback = this.mounted();\n    if (typeof callback === 'function') this.__unmountCallback = callback;\n    this.__isMounted = true;\n  }\n\n  /**@private */\n  /**@final */\n  // adoptedCallback() {}\n\n  /**@private */\n  /**@final */\n  disconnectedCallback() {\n    const constructor = this.constructor as typeof BaseElement;\n    if (constructor.observedStores) {\n      constructor.observedStores.forEach(store => {\n        disconnect(store, this.__update);\n      });\n    }\n    this.__unmountCallback?.();\n    this.unmounted();\n    this.__isMounted = false;\n  }\n}\n\nexport abstract class GemElement<T = {}> extends BaseElement<T> {\n  /**@private */\n  /**@final */\n  connectedCallback() {\n    this.willMount();\n    this.__connectedCallback();\n  }\n}\n\n// global render task pool\nconst renderTaskPool = new Pool<Function>();\nlet loop = false;\nconst tick = () => {\n  window.requestAnimationFrame(function callback(timestamp) {\n    const task = renderTaskPool.get();\n    if (task) {\n      task();\n      if (performance.now() - timestamp < 16) {\n        callback(timestamp);\n        return;\n      }\n    }\n    // `renderTaskPool` not empty\n    if (loop) {\n      tick();\n    }\n  });\n};\nrenderTaskPool.addEventListener('start', () => {\n  loop = true;\n  tick();\n});\nrenderTaskPool.addEventListener('end', () => (loop = false));\n\nexport abstract class AsyncGemElement<T = {}> extends BaseElement<T> {\n  /**@final */\n  __update() {\n    renderTaskPool.add(() => {\n      if (this.shouldUpdate()) {\n        render(this.render(), this.__renderRoot);\n        this.updated();\n      }\n    });\n  }\n\n  /**@private */\n  /**@final */\n  connectedCallback() {\n    this.willMount();\n    renderTaskPool.add(() => {\n      this.__connectedCallback();\n    });\n  }\n}\n\n// 重写了全局 customElements\n// 原因是方便多个独立 app 同时使用 gem\n// 用户使用和 gem 同名的元素不会生效也不会报错\nconst define = customElements.define.bind(customElements);\ncustomElements.define = function(\n  tagName: string,\n  Class: typeof GemElement | typeof AsyncGemElement,\n  options?: ElementDefinitionOptions,\n) {\n  if (!customElements.get(tagName)) {\n    define(tagName, Class, options);\n  }\n};\n","/**\n * target 并非元素，而是类的原型对象\n * 不能在 target 上使用 DOM API\n * 类定义之后立即执行，自定义元素可以在实例化时覆盖原型对象上的属性\n */\n\nimport { BaseElement } from './element';\nimport { Store } from './store';\nimport { Sheet, camelToKebabCase } from './utils';\n\nexport type RefObject<T = BaseElement> = { ref: string; element: T | null };\n\nexport function refobject(target: BaseElement, prop: string) {\n  const attr = prop;\n  const ref: RefObject<BaseElement> = { ref: attr, element: null };\n  Object.defineProperty(target, prop, {\n    get() {\n      const that = this as BaseElement;\n      const ele = that.shadowRoot || that;\n      ref.element = ele.querySelector(`[ref=${prop}]`);\n      return ref;\n    },\n  });\n}\n\nexport function attribute(target: BaseElement, prop: string) {\n  const con = target.constructor as typeof BaseElement;\n  if (!con.observedAttributes) con.observedAttributes = [];\n  con.observedAttributes.push(camelToKebabCase(prop));\n}\n\nexport function property(target: BaseElement, prop: string) {\n  const con = target.constructor as typeof BaseElement;\n  if (!con.observedPropertys) con.observedPropertys = [];\n  con.observedPropertys.push(prop);\n}\n\nexport function state(target: BaseElement, prop: string) {\n  Object.defineProperty(target, prop, {\n    get() {\n      const that = this as BaseElement;\n      return !!that.internals?.states?.contains(prop);\n    },\n    set(v: boolean) {\n      const that = this as BaseElement;\n      const internals = that.internals;\n      if (!internals.states) {\n        // 不支持 css states 时使用 classList\n        internals.states = that.classList;\n      }\n      if (v) {\n        internals.states.add(prop);\n      } else {\n        internals.states.remove(prop);\n      }\n    },\n  });\n}\n\nexport function slot(target: BaseElement, prop: string) {\n  const proto = target as BaseElement & { [index: string]: string };\n  proto[prop] = prop;\n}\n\nexport function part(target: BaseElement, prop: string) {\n  const proto = target as BaseElement & { [index: string]: string };\n  proto[prop] = prop;\n}\n\nexport function emitter(target: BaseElement, event: string) {\n  const con = target.constructor as typeof BaseElement;\n  if (!con.defineEvents) con.defineEvents = [];\n  con.defineEvents.push(event);\n}\n\nexport function adoptedStyle(style: CSSStyleSheet | Sheet<unknown>) {\n  return function(cls: Function) {\n    const c = cls as typeof BaseElement;\n    if (!c.adoptedStyleSheets) c.adoptedStyleSheets = [];\n    c.adoptedStyleSheets.push(style);\n  };\n}\n\nexport function connectStore(store: Store<unknown>) {\n  // 这里的签名该怎么写？\n  return function(cls: Function) {\n    const c = cls as typeof BaseElement;\n    if (!c.observedStores) c.observedStores = [];\n    c.observedStores.push(store);\n  };\n}\n\nexport function customElement(name: string) {\n  return function(cls: Function) {\n    customElements.define(name, cls);\n  };\n}\n","export * from './lib/store';\nexport * from './lib/history';\nexport * from './lib/element';\nexport * from './lib/decorators';\nexport * from './lib/utils';\n","import { createStoreSet } from '../../';\n\nexport default createStoreSet({\n  pageA: {\n    text: 'this is page A',\n  },\n  pageB: {\n    text: 'this is page B',\n  },\n});\n","import {\n  html,\n  GemElement,\n  customElement,\n  connectStore,\n  property,\n  emitter,\n  history,\n  TemplateResult,\n  UpdateHistoryParams,\n} from '../';\n\ninterface NamePostition {\n  [index: string]: number;\n}\n\nclass ParamsRegExp extends RegExp {\n  namePosition: NamePostition;\n  constructor(pattern: string) {\n    const namePosition: NamePostition = {};\n    let i = 0;\n    super(\n      `^${pattern\n        .replace(/:([^/$]+)/g, (_m, name: string) => {\n          namePosition[name] = i++;\n          return `([^/]+)`;\n        })\n        .replace('*', '.*')}$`,\n    );\n    this.namePosition = namePosition;\n  }\n}\n\nfunction getReg(pattern: string) {\n  return new ParamsRegExp(pattern);\n}\n\n// `/a/b/:c/:d` `/a/b/1/2`\nfunction getParams(pattern: string, path: string) {\n  const reg = getReg(pattern);\n  const matchResult = path.match(reg);\n  if (matchResult) {\n    const params: { [index: string]: string } = {};\n    Object.keys(reg.namePosition).forEach(name => {\n      params[name] = matchResult[reg.namePosition[name] + 1];\n    });\n    return params;\n  }\n}\n\nexport function isMatch(pattern: string, path: string) {\n  return !!path.match(getReg(pattern));\n}\n\nexport interface RouteItem {\n  // 支持 *\n  // 支持 /a/*\n  pattern: string;\n  redirect?: string;\n  content?: TemplateResult;\n  title?: string;\n}\n\nexport interface RoutesObject {\n  [prop: string]: RouteItem;\n}\n\n// params 中的成员不会验证\nexport type RouteOptions = Omit<UpdateHistoryParams, 'path'> & { params: { [index: string]: string } };\n\n// 从路由创建路径\n// 不包含 basePath\nexport function createPath(route: RouteItem, options?: RouteOptions) {\n  let path = route.pattern;\n  if (options && options.params) {\n    Object.keys(options.params).forEach(param => {\n      path = path.replace(new RegExp(`:${param}`, 'g'), options.params[param]);\n    });\n  }\n  return path;\n}\n\nexport function createHistoryParams(route: RouteItem, options?: RouteOptions): UpdateHistoryParams {\n  const path = createPath(route, options);\n  return {\n    path,\n    ...options,\n  };\n}\n\n/**\n * @customElement gem-route\n * @fires change\n */\n@connectStore(history.store)\n@customElement('gem-route')\nexport class Route extends GemElement {\n  static currentRoute: RouteItem | null;\n\n  // 获取当前匹配的路由的 params\n  static getParams() {\n    if (Route.currentRoute) {\n      return getParams(Route.currentRoute.pattern, history.getParams().path);\n    }\n  }\n\n  @property routes: RouteItem[] | RoutesObject;\n  @emitter change: Function;\n\n  private _href: string; // 用于内部比较\n\n  constructor() {\n    super();\n    const { path, query } = history.getParams();\n    const href = path + query;\n    this._href = href;\n  }\n  initPage() {\n    if (Route.currentRoute && Route.currentRoute.title && Route.currentRoute.title !== history.getParams().title) {\n      history.updateParams({ title: Route.currentRoute.title });\n    }\n  }\n\n  shouldUpdate() {\n    const { path, query } = history.getParams();\n    const href = path + query;\n    if (href !== this._href) {\n      this._href = href;\n      return true;\n    }\n    return false;\n  }\n\n  mounted() {\n    this.initPage();\n  }\n\n  updated() {\n    this.initPage();\n    this.change(Route.currentRoute);\n  }\n\n  render() {\n    if (!this.routes) return this.callback();\n    Route.currentRoute = null;\n\n    let defaultRoute: RouteItem | null = null;\n    let routes: RouteItem[];\n    if (this.routes instanceof Array) {\n      routes = this.routes;\n    } else {\n      routes = Object.values(this.routes);\n    }\n\n    for (const item of routes) {\n      const { pattern } = item;\n      if ('*' === pattern) {\n        defaultRoute = item;\n      } else if (isMatch(pattern, history.getParams().path)) {\n        Route.currentRoute = item;\n        break;\n      }\n    }\n\n    if (!Route.currentRoute) {\n      Route.currentRoute = defaultRoute;\n    }\n\n    if (!Route.currentRoute) return this.callback();\n    if (Route.currentRoute.redirect) {\n      history.replace({ path: Route.currentRoute.redirect });\n      return this.callback();\n    }\n    return html`\n      <style>\n        :host {\n          display: contents;\n        }\n      </style>\n      ${Route.currentRoute.content}\n    `;\n  }\n\n  callback() {\n    Route.currentRoute = null;\n    return html``;\n  }\n}\n","import { GemElement, html, history, basePathStore, attribute, property, connectStore, customElement, state } from '../';\nimport { isMatch, RouteItem, RouteOptions, createHistoryParams, createPath } from './route';\n\n/**\n * @customElement gem-link\n * @attr href\n * @attr doc-title\n * @attr path\n * @attr query\n * @attr hash\n * @attr pattern\n */\n@customElement('gem-link')\n@connectStore(basePathStore)\nexport class Link extends GemElement {\n  @attribute href: string;\n  @attribute path: string;\n  @attribute query: string;\n  @attribute hash: string;\n  @attribute docTitle: string;\n\n  // 动态路由，根据 route.pattern 和 options.params 计算出 path\n  @property route: RouteItem;\n  @property options: RouteOptions;\n\n  constructor() {\n    super();\n    this.onclick = this.clickHandle;\n  }\n\n  // 不包含 basePath\n  getHref() {\n    if (this.route) {\n      const queryProp = (this.options && this.options.query) || '';\n      const hashProp = (this.options && this.options.hash) || '';\n      return createPath(this.route, this.options) + queryProp + hashProp;\n    } else {\n      return this.href || this.path + this.query + this.hash;\n    }\n  }\n\n  clickHandle = (e: MouseEvent) => {\n    const href = this.getHref();\n\n    // 外部链接使用 `window.open`\n    if (!href.startsWith('/')) {\n      window.open(href);\n      return;\n    }\n\n    const { path, query, hash } = history.getParams();\n    if (path + query + hash === href) {\n      return;\n    }\n\n    e.stopPropagation();\n    if (this.route) {\n      history.pushIgnoreCloseHandle({ ...createHistoryParams(this.route, this.options), title: this.docTitle });\n    } else if (this.href) {\n      const { pathname, search, hash } = new URL(this.href, location.origin);\n      history.pushIgnoreCloseHandle({ path: pathname, query: search, hash, title: this.docTitle });\n    } else {\n      history.pushIgnoreCloseHandle({ path: this.path, query: this.query, hash: this.hash, title: this.docTitle });\n    }\n  };\n\n  preventDefault = (e: MouseEvent) => {\n    e.preventDefault();\n  };\n\n  render(href = this.getHref()) {\n    return html`\n      <style>\n        :host {\n          /* link default style */\n          cursor: pointer;\n          color: blue;\n          text-decoration: underline;\n        }\n        a {\n          all: unset;\n        }\n      </style>\n      <a @click=${this.preventDefault} href=${new URL(history.basePath + href, location.origin).toString()}>\n        <slot></slot>\n      </a>\n    `;\n  }\n}\n\n/**\n * @customElement gem-active-link\n * @attr pattern\n * @state active\n */\n@customElement('gem-active-link')\n@connectStore(history.store)\nexport class ActiveLink extends Link {\n  @attribute pattern: string; // 使用匹配模式设定 active\n  @state active: boolean;\n\n  render() {\n    const { path, query, hash } = history.getParams();\n    const isMatchPattern = this.pattern && isMatch(this.pattern, path);\n    const href = this.getHref();\n    if (isMatchPattern || path + query + hash === href) {\n      this.active = true;\n    } else {\n      this.active = false;\n    }\n    return super.render(href);\n  }\n}\n","import { html, GemElement, history, connectStore, customElement, attribute } from '..';\n\n/**\n * @customElement gem-title\n * @attr mode\n */\n@connectStore(history.store)\n@customElement('gem-title')\nexport class Title extends GemElement {\n  static setTitle(title: string) {\n    // 触发组件更新\n    history.updateParams({ title });\n  }\n\n  constructor(isHidden: boolean) {\n    super();\n    this.hidden = isHidden;\n  }\n\n  @attribute mode: 'safe';\n\n  render() {\n    const { title } = history.getParams();\n    const newTitle = title || this.textContent || '';\n\n    if (this.mode !== 'safe' || newTitle) {\n      document.title = newTitle;\n    }\n\n    if (this.hidden) {\n      return html``;\n    }\n    if (!document.title) {\n      return html`\n        <slot></slot>\n      `;\n    }\n    return html`\n      ${document.title}\n    `;\n  }\n}\n\nif (document.head && !document.head.querySelector('gem-title')) {\n  document.head.append(new Title(true));\n}\n","import { GemElement, html } from '../../';\nimport storeSet from './store';\n\ncustomElements.define(\n  'app-page-b',\n  class extends GemElement {\n    static observedStores = [storeSet.pageB];\n    render() {\n      return html`\n        <slot></slot> ${storeSet.pageB.text}\n      `;\n    }\n  },\n);\n","import { GemElement, html } from '../../';\nimport '../../elements/route';\n\nsetTimeout(() => import(`../../${`elem${''}ents`}/${'ti' + 'tle'}?123`));\n\nconst routes = [\n  {\n    title: 'ccccccd',\n    pattern: '/c/d',\n    content: html`\n      <div>C/D</div>\n    `,\n  },\n  {\n    // `title` 未设置会使用父路由标题\n    pattern: '/c/e',\n    content: html`\n      <div>C/E</div>\n    `,\n  },\n  {\n    pattern: '/c/*',\n    content: html`\n      <div>C/E</div>\n    `,\n  },\n];\n\ncustomElements.define(\n  'app-page-c',\n  class extends GemElement {\n    render() {\n      return html`\n        <style>\n          gem-link + gem-link {\n            margin-left: 0.5em;\n          }\n        </style>\n        <gem-link path=\"/c/d\">Page c/d</gem-link>\n        <gem-link path=\"/c/e\">Page c/e</gem-link>\n        <gem-route .routes=${routes}></gem-route>\n      `;\n    }\n  },\n);\n","import { GemElement, html, css } from '../../';\nimport '../../elements/link';\nimport '../../elements/route';\nimport '../../elements/title';\n\nimport './page-b';\nimport './page-c';\n\nconst routes = [\n  {\n    pattern: '/',\n    redirect: '/c/e',\n  },\n  {\n    title: 'Page A Title',\n    pattern: '/a',\n    get content() {\n      import('./page-a');\n      return html`\n        <app-page-a>A: </app-page-a>\n      `;\n    },\n  },\n  {\n    title: 'Page B Title',\n    pattern: '/b',\n    content: html`\n      <app-page-b>B: </app-page-b>\n    `,\n  },\n  {\n    title: 'Page C Title',\n    pattern: '/c/*',\n    content: html`\n      <app-page-c>C: </app-page-c>\n    `,\n  },\n  {\n    pattern: '/',\n    content: html`\n      <div>hello</div>\n    `,\n  },\n];\n\nclass App extends GemElement {\n  render() {\n    return html`\n      <style>\n        :host {\n          text-align: center;\n        }\n        gem-link {\n          cursor: pointer;\n        }\n        gem-link + gem-link {\n          margin-left: 0.5em;\n        }\n        gem-link:hover {\n          text-decoration: underline;\n        }\n      </style>\n      <header><gem-title>Default Title</gem-title></header>\n      <nav>\n        <gem-link path=\"/\">Home</gem-link>\n        <gem-link path=\"/a\">PageA</gem-link>\n        <gem-link path=\"/b\">PageB</gem-link>\n        <gem-link path=\"/c/e\" pattern=\"/c/*\">PageC</gem-link>\n      </nav>\n      <main>\n        <gem-route .routes=${routes}></gem-route>\n      </main>\n    `;\n  }\n}\n\nconst style = document.createElement('style');\nstyle.innerHTML = css`\n  body {\n    font-size: xx-large;\n  }\n`;\ndocument.head.append(style);\n\ncustomElements.define('app-root', App);\ndocument.body.append(new App());\n"],"sourceRoot":""}